version: '3'

services:

 #Front-end Angular boilerplate
  boilerplate:
    build: ./angular-boilerplate
    container_name: boilerplate
    image: 'tuhin47/boilerplate:dev'
    ports:
      - 4222:80
    links:
      - apigateway
    volumes:
      - /mnt/Others/personal/springbootmicroservicedailybuffer/angular-boilerplate/dist/easy-angular:/usr/share/nginx/html
    networks:
      - backend

  serviceregistry:
    build:
      context: service-registry
      dockerfile: Dockerfile
    image: 'tuhin47/serviceregistry:dev'
    container_name: serviceregistry
    ports:
      - 8761:8761
    networks:
      - backend

  configserver:
    build:
      context: configserver
      dockerfile: ../Dockerfile
    image: tuhin47/configserver:dev
    container_name: configserver
    ports:
      - 9296:9296
      - 19296:19296
    environment:
      - DEUBG_PORT=19296
      - EUREKA_SERVER_ADDRESS
    working_dir: /app
    command: sh /script/run.sh
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://configserver:9296/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - serviceregistry
    networks:
      - backend
    volumes:
      - $PROJECT_PATH/configserver:/app
      - $MAVEN_REPO:/root/.m2

  apigateway:
    build:
      context: apigateway
      dockerfile: ../Dockerfile
    image: 'tuhin47/gateway:dev'
    container_name: apigateway
    ports:
      - 9090:9090
      - 19090:19090
    environment:
      - DEUBG_PORT=19090
      - EUREKA_SERVER_ADDRESS
      - CONFIG_SERVER_URL
      - ZIPKIN_URL
      - REDIS_URL=redis://redis:6379
    depends_on:
      - configserver
      - zipkin
      - redis
      - serviceregistry
      - orderservice
      - authservice
      - paymentservice
    working_dir: /app
    command: sh /script/run.sh
    networks:
      - backend
    volumes:
      - $PROJECT_PATH/apigateway:/app
      - $MAVEN_REPO:/root/.m2


  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
#      - JAVA_OPTS=-Dlogging.level.zipkin=DEBUG
#      - SCRIBE_ENABLED=false
#      - SELF_TRACING_ENABLED=true
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
    networks:
      - backend

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend


  authservice:
    build:
      context: spring-boot-oauth2-social-login
      dockerfile: ../Dockerfile
    image: 'tuhin47/authservice-china:dev'
    container_name: authservice
    ports:
      - 7777:7777
      - 17777:17777
      - 35729:35729
    environment:
      - DEUBG_PORT=17777
      - EUREKA_SERVER_ADDRESS
      - CONFIG_SERVER_URL
      - MYSQL_HOST
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_DB=userdb
      - CLIENT_ID
      - CLIENT_SECRET
    working_dir: /app
    command: sh /script/run.sh
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      - backend
    volumes:
      - $PROJECT_PATH/spring-boot-oauth2-social-login:/app
      - $MAVEN_REPO:/root/.m2


  productservice:
    build:
      context: productservice
      dockerfile: ../Dockerfile
    image: 'tuhin47/productservice:dev'
    container_name: productservice
    ports:
      - 8081:8081
      - 18081:18081
    environment:
      - DEUBG_PORT=18081
      - EUREKA_SERVER_ADDRESS
      - CONFIG_SERVER_URL
      - MYSQL_HOST
      - MYSQL_USER
      - MYSQL_PASSWORD
      - ZIPKIN_URL
    working_dir: /app
    command: sh /script/run.sh
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      zipkin:
        condition: service_healthy
    networks:
      - backend
    volumes:
      - $PROJECT_PATH/productservice:/app
      - $MAVEN_REPO:/root/.m2

  orderservice:
    build:
      context: orderservice
      dockerfile: ../Dockerfile
    image: 'tuhin47/orderservice:dev'
    container_name: orderservice
    ports:
      - 8082:8082
      - 18082:18082
    environment:
      - DEUBG_PORT=18082
      - EUREKA_SERVER_ADDRESS
      - CONFIG_SERVER_URL
      - MYSQL_HOST
      - MYSQL_USER
      - MYSQL_PASSWORD
      - ZIPKIN_URL
    working_dir: /app
    command: sh /script/run.sh
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      zipkin:
        condition: service_healthy
    networks:
      - backend
    volumes:
      - $PROJECT_PATH/orderservice:/app
      - $MAVEN_REPO:/root/.m2


  paymentservice:
    build:
      context: paymentservice
      dockerfile: ../Dockerfile
    image: 'tuhin47/paymentservice:dev'
    container_name: paymentservice
    ports:
      - 8083:8083
      - 18083:18083
    environment:
      - DEUBG_PORT=18083
      - MYSQL_DB=paymentdb
      - EUREKA_SERVER_ADDRESS
      - CONFIG_SERVER_URL
      - MYSQL_HOST
      - MYSQL_USER
      - MYSQL_PASSWORD
      - ZIPKIN_URL
    working_dir: /app
    command: sh /script/run.sh
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      zipkin:
        condition: service_healthy
    networks:
      - backend
    volumes:
      - $PROJECT_PATH/paymentservice:/app
      - $MAVEN_REPO:/root/.m2

  database:
    container_name: database
    image: 'mysql:latest'
    ports:
      - "3306:3306"
    restart: always
    environment:
      - MYSQL_USER=extra
      - MYSQL_PASSWORD=extra
      - MYSQL_ROOT_PASSWORD=$MYSQL_PASSWORD
      - MYSQL_DB=userdb
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

networks:
  backend:
    driver: bridge

volumes:
  db-data: