{
  "openapi": "3.0.3",
  "info": {
    "title": "Order Service",
    "description": "API endpoints for managing Order api",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://4f6f9047-2d15-48ce-a57f-0072f9521d63.mock.pstmn.io",
      "description": "Postman MockServer"
    },
    {
      "url": "http://gateway:9090",
      "description": "Internal URL"
    }
  ],
  "tags": [
    {
      "name": "Order API",
      "description": "Order Controller"
    }
  ],
  "paths": {
    "/order": {
      "post": {
        "tags": [
          "Order API"
        ],
        "summary": "createOrder",
        "operationId": "createOrderUsingPOST",
        "parameters": [
          {
            "name": "accountNonExpired",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accountNonLocked",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credentialsNonExpired",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleNames",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "secret",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Authorization": [
              "global"
            ]
          }
        ]
      }
    },
    "/order/top-orders-by-date-range": {
      "get": {
        "tags": [
          "Order API"
        ],
        "summary": "getTop10OrderByDateRange",
        "operationId": "getTop10OrderByDateRangeUsingGET",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopOrderDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Authorization": [
              "global"
            ]
          }
        ]
      }
    },
    "/order/{orderId}": {
      "get": {
        "tags": [
          "Order API"
        ],
        "summary": "Get order details by ID",
        "operationId": "getOrderDetailsUsingGET",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseWithDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Authorization": [
              "global"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "OrderRequest": {
        "title": "OrderRequest",
        "type": "object",
        "properties": {
          "paymentMode": {
            "type": "string",
            "enum": [
              "APPLE_PAY",
              "CASH",
              "CREDIT_CARD",
              "DEBIT_CARD",
              "PAYPAL"
            ]
          },
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "OrderResponseWithDetails": {
        "title": "OrderResponseWithDetails",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderStatus": {
            "type": "string"
          },
          "paymentResponse": {
            "$ref": "#/components/schemas/PaymentResponse"
          },
          "productResponse": {
            "$ref": "#/components/schemas/ProductResponse"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PaymentResponse": {
        "title": "PaymentResponse",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentMode": {
            "type": "string",
            "enum": [
              "APPLE_PAY",
              "CASH",
              "CREDIT_CARD",
              "DEBIT_CARD",
              "PAYPAL"
            ]
          },
          "paymentStatus": {
            "type": "string"
          }
        }
      },
      "ProductResponse": {
        "title": "ProductResponse",
        "type": "object",
        "properties": {
          "discount": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "productName": {
            "type": "string"
          },
          "productType": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TopOrderDto": {
        "title": "TopOrderDto",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "buyerId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "userResponse": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "UserResponse": {
        "title": "UserResponse",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}