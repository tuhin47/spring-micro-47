eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}

spring:
  datasource:
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:root}
    driverClassName: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  main:
    allow-bean-definition-overriding: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # https://stackoverflow.com/a/50523578/7499069
  servlet:
    multipart:
      location: /data/upload_tmp
  redis:
    url: ${REDIS_URL:redis://localhost:6379}
  zipkin:
    baseUrl: ${ZIPKIN_URL:http://localhost:9411/}
  output:
    ansi:
      enabled: ALWAYS
axon:
  axonserver:
    servers: ${AXON_SERVER_URL:localhost:8124}

app:
  version: @project.version@
  config:
    qrIssuer: tuhin47
    noAuth: ${NOAUTH_ENABLE:false}
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorization request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris: http://localhost:4200/auth/login,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect

management:
  endpoints:
    web:
      exposure:
        include: "*"
        # include: "health,info"
  endpoint:
    health:
      show-details: always

logging:
  level:
    com: INFO
    me:
      tuhin47: DEBUG
    org:
      springframework.orm.jpa: DEBUG
      springframework.transaction: DEBUG
      springframework: INFO
      hibernate:
        SQL: INFO
        type:
          descriptor:
            sql:
              BasicBinder: DEBUG
