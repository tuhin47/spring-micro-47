server:
  port: 7777

spring:
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:3306/${MYSQL_DB:userdb}?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Turkey
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:111111}
    driverClassName: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            scope:
              - email
              - profile
          facebook:
            clientId: <your-client-id>
            clientSecret: <your-client-secret>
          github:
            clientId: <your-client-id>
            clientSecret: <your-client-secret>
          linkedin:
            clientId: <your-client-id>
            clientSecret: <your-client-secret>
            client-authentication-method: post
            authorization-grant-type: authorization_code
            scope: 'r_liteprofile, r_emailaddress'
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            client-name: Linkedin
            provider: linkedin
        provider:
          facebook:
            user-info-uri: 'https://graph.facebook.com/me?fields'
          linkedin:
            authorization-uri: 'https://www.linkedin.com/oauth/v2/authorization'
            token-uri: 'https://www.linkedin.com/oauth/v2/accessToken'
            user-info-uri: 'https://api.linkedin.com/v2/me'
            user-name-attribute: id
linkedin:
  email-address-uri: 'https://api.linkedin.com/v2/emailAddress?q'
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorization request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris: http://localhost:4200/home,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect
logging:
  level:
    com: INFO
    org:
      springframework: INFO
      hibernate:
        SQL: TRACE
        type: TRACE
